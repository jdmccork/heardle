@page
@model GameModel
@{
	ViewData["Title"] = "Heardle";
	ViewData["Page"] = "game";
}
<script src="https://sdk.scdn.co/spotify-player.js"></script>
@Html.AntiForgeryToken()
<p id="guessMessage">@Model.Message</p>
<div id="song-element">
</div>

<script type="text/javascript">
	$.ajaxSetup({
		'headers': {
			'RequestVerificationToken': $('input[name = "__RequestVerificationToken"]').val(),
		}
	}
	);

	let player
	window.onSpotifyWebPlaybackSDKReady = () => {
		const token = '@Model.Token';
		player = new Spotify.Player({
			name: 'Heardle Web Playback SDK',
			getOAuthToken: cb => { cb(token); },
			volume: 0.3
		});

		player.addListener('ready', ({ device_id }) => {
			console.log('Ready with Device ID', device_id);

			$.ajax({
				url: '/Game?handler=ConnectSDK',
				data: { "deviceId": device_id },
				type: "POST",
				success: function (data) {
					document.getElementById("guessMessage").textContent = data
					loadGame()
				},
				error: function (response) {
					console.log(response);
				}
			});
		});

		// Not Ready
		player.addListener('not_ready', ({ device_id }) => {
			console.log('Device ID has gone offline', device_id);
		});

		player.addListener('initialization_error', ({ message }) => {
			console.error(message);
		});

		player.addListener('authentication_error', ({ message }) => {
			console.error(message);
		});

		player.addListener('account_error', ({ message }) => {
			console.error(message);
		});

		player.connect();
	}

	function loadGame() {
		$('#song-element').load('/Game?handler=NextSong', function() {
			document.getElementById("guessMessage").textContent = ""
		})
		return true;
	}
</script>
